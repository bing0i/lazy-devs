{"version":3,"sources":["components/Post.js","components/PostForm.js","components/AddNewPostPage.js"],"names":["Post","post","mdConverter","showdown","Converter","className","title","description","dangerouslySetInnerHTML","__html","makeHtml","content","memo","PostForm","setPost","categories","useSelector","state","dispatch","useDispatch","handleSubmission","useCallback","e","preventDefault","category","pushPost","handleInput","target","name","value","onSubmit","htmlFor","spellCheck","id","defaultValue","onChange","map","item","toUpperCase","replace","_id","type","onInput","AddNewPostPage","useState","isPreviewMode","setIsPreviewMode","handlePreviewMode","defaultChecked"],"mappings":"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","file":"static/js/4.78b69f80.chunk.js","sourcesContent":["import showdown from 'showdown';\r\nimport { memo } from 'react';\r\n\r\nconst Post = ({ post }) => {\r\n  const mdConverter = new showdown.Converter();\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-5 my-8\">\r\n      <div></div>\r\n      <section className=\"col-span-3\">\r\n        <h1 className=\"text-3xl font-bold text-center\">{post.title}</h1>\r\n        <p className=\"mb-4 text-sm italic text-center text-gray-600\">\r\n          {post.description}\r\n        </p>\r\n        <div\r\n          className=\"grid grid-flow-row gap-4 markdown\"\r\n          dangerouslySetInnerHTML={{\r\n            __html: mdConverter.makeHtml(post.content),\r\n          }}\r\n        ></div>\r\n      </section>\r\n      <div></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(Post);\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { memo } from 'react';\r\nimport { useCallback } from 'react';\r\nimport { pushPost } from '../sagas/actionsSaga';\r\n\r\nconst PostForm = ({ post, setPost }) => {\r\n  const categories = useSelector(state => state.categories);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmission = useCallback(\r\n    e => {\r\n      e.preventDefault();\r\n\r\n      post.category !== ''\r\n        ? dispatch(pushPost(post))\r\n        : dispatch(pushPost({ ...post, category: categories[0].title }));\r\n\r\n      setPost({\r\n        category: '',\r\n        title: '',\r\n        description: '',\r\n        content: '',\r\n      });\r\n    },\r\n    [post, setPost, dispatch, categories]\r\n  );\r\n  const handleInput = useCallback(\r\n    e => {\r\n      setPost({ ...post, [e.target.name]: e.target.value });\r\n    },\r\n    [post, setPost]\r\n  );\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-5 my-8\">\r\n      <div></div>\r\n      <form\r\n        onSubmit={handleSubmission}\r\n        className=\"grid col-span-3 text-base text-light-text grid-auto-row gap-y-8\"\r\n      >\r\n        <label htmlFor=\"categories\">\r\n          <span className=\"ml-3 text-sm font-bold\">CATEGORY</span>\r\n          <select\r\n            className={`w-full rounded-xl focus:outline-none focus:ring \r\n          focus:ring-accent focus:border-accent px-3 py-2 shadow-md`}\r\n            spellCheck=\"false\"\r\n            name=\"category\"\r\n            id=\"category\"\r\n            defaultValue={post.category}\r\n            onChange={handleInput}\r\n          >\r\n            {categories.map(item => {\r\n              return (\r\n                <option key={item._id} value={item.title}>\r\n                  {item.title.toUpperCase().replace('-', ' ')}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        </label>\r\n\r\n        <label htmlFor=\"title\">\r\n          <span className=\"ml-3 text-sm font-bold\">TITLE</span>\r\n          <input\r\n            className={`w-full rounded-xl focus:outline-none focus:ring \r\n          focus:ring-accent focus:border-accent px-3 py-2 shadow-md`}\r\n            spellCheck=\"false\"\r\n            type=\"text\"\r\n            name=\"title\"\r\n            id=\"title\"\r\n            value={post.title}\r\n            onInput={handleInput}\r\n          />\r\n        </label>\r\n\r\n        <label htmlFor=\"description\">\r\n          <span className=\"ml-3 text-sm font-bold\">DESCRIPTION</span>\r\n          <input\r\n            className={`w-full rounded-xl focus:outline-none focus:ring \r\n          focus:ring-accent focus:border-accent px-3 py-2 shadow-md`}\r\n            spellCheck=\"false\"\r\n            type=\"text\"\r\n            name=\"description\"\r\n            id=\"description\"\r\n            value={post.description}\r\n            onInput={handleInput}\r\n          />\r\n        </label>\r\n\r\n        <label htmlFor=\"content\">\r\n          <span className=\"ml-3 text-sm font-bold\">CONTENT</span>\r\n          <textarea\r\n            className={`w-full h-screen rounded-xl focus:outline-none focus:ring \r\n          focus:ring-accent focus:border-accent px-3 py-2 shadow-md resize-none`}\r\n            spellCheck=\"false\"\r\n            name=\"content\"\r\n            id=\"content\"\r\n            value={post.content}\r\n            onInput={handleInput}\r\n          ></textarea>\r\n        </label>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          className=\"p-3 mb-8 font-bold shadow-md bg-accent rounded-xl focus:outline-none focus:ring focus:ring-light-text focus:border-light-text hover:bg-hover-accent hover:text-white\"\r\n        >\r\n          CREATE A NEW POST\r\n        </button>\r\n      </form>\r\n      <div></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(PostForm);\r\n","import Post from './Post';\r\nimport PostForm from './PostForm';\r\nimport { useState, memo } from 'react';\r\nimport { useCallback } from 'react';\r\n\r\nconst AddNewPostPage = () => {\r\n  const [isPreviewMode, setIsPreviewMode] = useState(false);\r\n  const [post, setPost] = useState({\r\n    category: '',\r\n    title: '',\r\n    description: '',\r\n    content: '',\r\n  });\r\n  const handlePreviewMode = useCallback(\r\n    () => setIsPreviewMode(!isPreviewMode),\r\n    [isPreviewMode]\r\n  );\r\n\r\n  return (\r\n    <section>\r\n      <div className=\"mt-8 text-center\">\r\n        <label htmlFor=\"toggle\" className=\"mr-5 text-sm font-bold\">\r\n          PREVIEW MODE\r\n        </label>\r\n        <div className=\"relative inline-block w-10 mr-2 align-middle transition duration-200 ease-in select-none\">\r\n          <input\r\n            className=\"absolute block w-6 h-6 bg-white border-4 rounded-full appearance-none cursor-pointer toggle-checkbox\"\r\n            type=\"checkbox\"\r\n            name=\"editMode\"\r\n            id=\"editMode\"\r\n            defaultChecked={isPreviewMode}\r\n            onChange={handlePreviewMode}\r\n          />\r\n          <label\r\n            htmlFor=\"editMode\"\r\n            className=\"block h-6 overflow-hidden bg-gray-300 rounded-full cursor-pointer toggle-label\"\r\n          ></label>\r\n        </div>\r\n      </div>\r\n\r\n      {isPreviewMode ? (\r\n        <Post category={post.category} post={post} />\r\n      ) : (\r\n        <PostForm post={post} setPost={setPost} />\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default memo(AddNewPostPage);\r\n"],"sourceRoot":""}